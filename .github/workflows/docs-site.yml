name: Deploy docs site to GitHub Pages

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - '.github/workflows/docs-site.yml'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Install dependencies
        run: |
          cd docs
          rm -f Gemfile Gemfile.lock || true
          echo "source 'https://rubygems.org'" > Gemfile
          echo "gem 'jekyll', '~> 4.3.2'" >> Gemfile
          echo "gem 'jekyll-remote-theme', '~> 0.4.3'" >> Gemfile
          echo "gem 'jekyll-seo-tag', '~> 2.8.0'" >> Gemfile
          echo "gem 'jekyll-github-metadata', '~> 2.16.0'" >> Gemfile
          echo "gem 'jekyll-include-cache', '~> 0.2.1'" >> Gemfile
          bundle install --jobs 4 --retry 3

      - name: Update documentation frontmatter
        run: |
          chmod +x scripts/update_docs_frontmatter.sh || echo "No frontmatter script found"
          [ -f scripts/update_docs_frontmatter.sh ] && ./scripts/update_docs_frontmatter.sh || echo "Skipping frontmatter update"

      - name: Build with Jekyll
        run: |
          cd docs
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: List generated files
        run: ls -la docs/_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: docs/_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
        with:
          artifact_name: github-pages
